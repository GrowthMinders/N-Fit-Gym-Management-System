<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        72Qp7b4q9R7t4c6yrvo91+9u9e/+PW3xKVn2vFT9W/xY6vfbz69qiztlef2OP6c93Erav0XqD1Kr//5V
        39uadMry56R+KVW/0xqFXlVjD769NdkobV/dftzamD5pO+p3XrJ89P8JADj3EnR1+WJd/1516rIzAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD25/Ve
        7/8B0/ojR45qxrgAAAAASUVORK5CYII=
</value>
  </data>
</root>